// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  accounts  Account[]
  categories Category[]

  @@map("users")
}

model Account {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  name      String
  balance   Float
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("accounts")
}

model Category {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  name      String
  type      CategoryType
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("categories")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  accountId   Int      @map("account_id")
  categoryId  Int      @map("category_id")
  amount      Float
  description String?
  date        DateTime
  type        TransactionType
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  account     Account  @relation(fields: [accountId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

enum CategoryType {
  income
  expense
}

enum TransactionType {
  income
  expense
}
